[gd_scene load_steps=17 format=2]

[ext_resource path="res://JellyFish.tscn" type="PackedScene" id=1]
[ext_resource path="res://Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://TileStage.tscn" type="PackedScene" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://Fonts/built titling bd.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://Main.gd" type="Script" id=6]

[sub_resource type="Shader" id=16]
code = "shader_type canvas_item;

void fragment() {
	vec4 col = texture(SCREEN_TEXTURE, vec2(SCREEN_UV.x+200.0*SCREEN_PIXEL_SIZE.x,SCREEN_UV.y));
	COLOR = col;
}"

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;

uniform int stage_width : hint_range(100, 400);

void fragment() {
	vec4 col = vec4(0);
	col = 
	COLOR = col;
}

"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/stage_width = null

[sub_resource type="Shader" id=19]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform float posY;
uniform float posX;
uniform float h0 : hint_range(0.0,1.0); // The height of the horizon
uniform float h1 : hint_range(0.0,1.0);
uniform float h2 : hint_range(0.0,1.0);
uniform float h3 : hint_range(0.0,1.0);
uniform float h4 : hint_range(0.0,1.0);
uniform float h5 : hint_range(0.0,1.0);
uniform float c0 : hint_range(0.0,1.0); // The height of the horizon
uniform float c1 : hint_range(0.0,1.0);
uniform float c2 : hint_range(0.0,1.0);
uniform float c3 : hint_range(0.0,1.0);
uniform float c4 : hint_range(0.0,1.0);
uniform float c5 : hint_range(0.0,1.0);
uniform sampler2D noise; // add two noises. Play with these some time to get a decent result
uniform float wave_frequency : hint_range(0.0, 100.0);
uniform float wave_magnitude : hint_range(0.0, .3);
uniform float tides_magnitude : hint_range(0.0, .3);
uniform float noise_wave : hint_range(0.0, 3.0); // add noisiness to waves
uniform float tides_speed : hint_range(0.0, 20.0);
uniform float wave_speed : hint_range(0.0, 20.0);

uniform vec4 water_color : hint_color;

void fragment()
{	
	float waves[6];
	float wcolor[6];
	waves[0] = h0;
	waves[1] = h1;
	waves[2] = h2;
	waves[3] = h3;
	waves[4] = h4;
	waves[5] = h5;
	wcolor[0] = c0;
	wcolor[1] = c1;
	wcolor[2] = c2;
	wcolor[3] = c3;
	wcolor[4] = c4;
	wcolor[5] = c5;
	
	for(int i=0; i<6; i++) {
		waves[i] = fract((float(i) + -posY/100.) / 6.0);
	}
	
	for (int i=0; i<6; i++){
		float move_right;
		if(i%2==1){
			move_right = 1.;
		}else{
			move_right = -1.;
		}
		waves[i] += sin(UV.x * wave_frequency + move_right*TIME* wave_speed) * wave_magnitude;
		waves[i] += sin(TIME * tides_speed) * tides_magnitude;
		waves[i] -= texture(noise, UV).r * 0.05 * noise_wave;
	
	}
	
	float top_height = 2.0;
	int top_wave = -1;
	for (int i=0; i<6; i++) {
		if (waves[i] < top_height) {
			top_wave = i;
			top_height = waves[i];
		}
	}
	
	vec4 col = vec4(0);
	int idx;
	for (int i=0; i<6; i++){
		idx = (i + top_wave)%6;
		//vec4 darkness = vec4(wcolor[i],wcolor[i],wcolor[i],1.);
		vec4 darkness = vec4(1.0-waves[idx],waves[idx],waves[idx],1.);
	
		col = mix(col, darkness, step(waves[idx], UV.y));
	}
	
	// color burn
	col = 1.0 - (1. - water_color) / col;
	
	COLOR = col;
}"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 19 )
shader_param/posY = 5.0
shader_param/posX = null
shader_param/h0 = 0.053
shader_param/h1 = 0.16
shader_param/h2 = 0.284
shader_param/h3 = 0.538
shader_param/h4 = 0.677
shader_param/h5 = 0.804
shader_param/c0 = 0.873
shader_param/c1 = 0.677
shader_param/c2 = 0.52
shader_param/c3 = 0.363
shader_param/c4 = 0.236
shader_param/c5 = 0.157
shader_param/wave_frequency = 37.7
shader_param/wave_magnitude = 0.008
shader_param/tides_magnitude = 0.006
shader_param/noise_wave = 1.188
shader_param/tides_speed = 3.638
shader_param/wave_speed = 5.694
shader_param/water_color = Color( 0.832892, 0.89, 0.2047, 1 )
shader_param/noise = SubResource( 3 )

[sub_resource type="DynamicFont" id=18]
size = 42
font_data = ExtResource( 5 )

[sub_resource type="RectangleShape2D" id=20]
extents = Vector2( 96.5, 28 )

[node name="Main" type="Node2D"]
script = ExtResource( 6 )

[node name="Icon" type="Sprite" parent="."]
visible = false
material = SubResource( 17 )
position = Vector2( -187, 130 )
scale = Vector2( 6.14844, 8.51758 )
texture = ExtResource( 4 )

[node name="TileMap" parent="." instance=ExtResource( 3 )]

[node name="TileMap2" parent="." instance=ExtResource( 3 )]
position = Vector2( -512, 0 )

[node name="TileMap3" parent="." instance=ExtResource( 3 )]
position = Vector2( 512, 0 )

[node name="Player" parent="." instance=ExtResource( 2 )]
modulate = Color( 0.741176, 1, 0.52549, 1 )
position = Vector2( 100, -2 )
z_index = 1
collision_mask = 2
speed = 5.0
grav = 1.515
dampX = 0.906
dampY = 0.914

[node name="Camera2D" type="Camera2D" parent="Player"]
show_behind_parent = true
material = SubResource( 15 )
current = true

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = -1

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
show_behind_parent = true
material = SubResource( 6 )
margin_top = -88.0
margin_right = 512.0
margin_bottom = 400.0

[node name="ColorRect2" type="ColorRect" parent="CanvasLayer"]
show_behind_parent = true
material = SubResource( 6 )
margin_left = -512.0
margin_top = -88.0
margin_bottom = 400.0

[node name="Title" type="Label" parent="."]
margin_left = 3.0
margin_top = 14.0
margin_right = 197.0
margin_bottom = 68.0
custom_fonts/font = SubResource( 18 )
text = "UNDERWATER"

[node name="JellyFish" parent="." instance=ExtResource( 1 )]
position = Vector2( 162, 144 )

[node name="GoalArea" type="Area2D" parent="."]
position = Vector2( 87, 859 )
collision_layer = 8
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="GoalArea"]
position = Vector2( 96.5, 28 )
shape = SubResource( 20 )

[connection signal="body_entered" from="GoalArea" to="." method="game_clear"]
